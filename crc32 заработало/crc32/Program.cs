using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace crc32
{
    class Program
    {
        static void Main(string[] args)
        {
            const int polinom = 0x04C11DB7;
            const int n = 2;
            int[] idata = new int[n] { 1234256, 5};//данные, которые отправляет пользователь, отправка начинается с нулевого
            byte[] byte_data = new byte[(n+1) * 4];//приходящие байты с правильным порядком бит и возможностью востановить сообщение
            byte[] transport_data = new byte[(n + 1) * 4];//сообщение с развернутым порядком бит в байтах - т.е. нужно развернуть для передачи, а когда проверяем crc, то обратно развернуть
            int[] crc = new int[40];
            BitArray crcpolinom = new BitArray(new int[] { polinom });//полином в битах (true?false)
            int[] crc32bits = new int[40];//полином в 5 байтов (вначале все нули), для XOR

////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            Console.WriteLine("Передаваемые числа (старшие числа в массиве впереди):");
            for (int i = 0; i <n; i++)
            {
                Console.Write(idata[i] + " ");
            }
            Console.WriteLine('\n');
////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////

            //приведение полинома к необходимому виду и начальная инициализация crc
            for (int i = 0; i < 7; i++)
            {
                crc32bits[i] = 0;
                crc[i] = 1;//ТУТ МЕНЯТЬ НАЧАЛЬНОЕ CRC
            }
            for (int i = 7; i < 39; i++)
            {
                crc32bits[i] = crcpolinom[i-7] ? 1 : 0;
                crc[i] = 1;//ТУТ МЕНЯТЬ НАЧАЛЬНОЕ CRC
            }
            crc32bits[39] = 1;

////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            Console.WriteLine("Пораждающий полином в битах. Начальная инициализация (старшие байты впереди): ");
            for (int i = 39; i >=0; i--)
            {
                if ((i + 1) % 8 == 0 && i!=39)
                    Console.Write(' ');
                Console.Write(crc32bits[i]);
            }
            Console.WriteLine('\n');

                        Console.WriteLine("Начальная инициализация crc (старшие байты впереди):");
            for (int i = 39; i >= 0; i--)
            {
                if ((i + 1) % 8 == 0 && i != 39)
                    Console.Write(' ');
                Console.Write(crc[i]);
            }
            Console.WriteLine('\n');
            ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////

           int count = 0;
            //Байты, которые мы хотим отправить
            for (int i = n-1; i >=0; i--)
            {
                byte[] temp = BitConverter.GetBytes(idata[n-i-1]);
                byte_data[(i+1)*4+3] = temp[3];
                byte_data[(i+1)*4+2] = temp[2];
                byte_data[(i+1)*4+1] = temp[1];
                byte_data[(i+1)*4+0] = temp[0];
                count++;
            }
            for (int i = 3; i >= 0; i--)
            {
                byte temp = 0;//ТУТ ДОПИСЫВАЕМ В КОНЕЦ
                byte_data[i] = temp;
            }


////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            Console.WriteLine("Массив передаваемых байт (последние четыре - это дописанные пустые байты под crc):");
            for (int i = (n + 1) * 4-1; i >=0 ; i--)
            {
                
                Console.Write(byte_data[i] + " ");
            }
            Console.WriteLine('\n');
////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////

            //формируем
            for (int j = (n + 1) * 4-1; j >=4 ; j--)
            {
                BitArray b = new BitArray(new byte[] { byte_data[j] });
                int[] bits = b.Cast<bool>().Select(bit => bit ? 1 : 0).ToArray();//прямой порядок бит - старший под номером 7
////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                //    Console.WriteLine("Передоваемый по порядку байт для подсчета crc");
                //for (int i = 7; i >= 0; i--)
                //{
                //    Console.Write(bits[i]);
                //}
////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                shiftCHECK(bits, crc, crc32bits);


            }
            for (int i = 31; i >= 0; i--)
            {
                crc[i] = crc[i] == 1 ? 0 : 1;//ТУТ МЕНЯТЬ ИНВЕРСИЮ В ПЕРВЫЙ РАЗ
                Console.Write(crc[i]);
            }

            for (int j = 3; j >= 0; j--)
            {
                BitArray b = new BitArray(new byte[] { byte_data[j] });
                int[] bits = b.Cast<bool>().Select(bit => bit ? 1 : 0).ToArray();//прямой порядок бит - старший под номером 7
                                                                                 ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                                                                                 //    Console.WriteLine("Передоваемый по порядку байт для подсчета crc");
                                                                                 //for (int i = 7; i >= 0; i--)
                                                                                 //{
                                                                                 //    Console.Write(bits[i]);
                                                                                 //}
                                                                                 ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                shiftCHECK(bits, crc, crc32bits);

            }
            ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            Console.WriteLine("\nСформировавшееся crc:\n");

            for (int i = 31; i >= 0; i--)
            {
                Console.Write(crc[i]);
            }

////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            Console.WriteLine("\nИнверсированное crc:\n");
            for (int i = 31; i >= 0; i--)
            {
                crc[i] = crc[i] == 1 ? 0 : 1;//ТУТ МЕНЯТЬ ИНВЕРСИЮ В ПЕРВЫЙ РАЗ
                Console.Write(crc[i]);
            }

            //проверяем
          int[] crccheck = new int[40];


            for (int i = 0; i < 40; i++)
            {
                crccheck[i] = 1;//ТУТ ИНИЦИАЛИЗАЦИЯ НОВОГО CRC
            }

            for (int j = (n+1) * 4 - 1; j >= 4; j--)
            {
                BitArray b = new BitArray(new byte[] { byte_data[j] });
                int[] bits = b.Cast<bool>().Select(bit => bit ? 1 : 0).ToArray();//прямой порядок бит - старший под номером 7
////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                //Console.WriteLine("Передоваемый по порядку байт для подсчета crc");
                //for (int i = 7; i >= 0; i--)
                //{
                //    Console.Write(bits[i]);
                //}
////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                shiftCHECK(bits, crccheck, crc32bits);

            }
            Console.WriteLine();
            for (int i = 31; i >= 0; i--)
            {
                //crccheck[i] = crccheck[i] == 1 ? 0 : 1;
                Console.Write(crccheck[i]);
            }
            //Console.WriteLine();
            for (int j = 3; j >= 0; j--)
            {
                int[] bits = new int[8];
                for (int i = 7; i >=0; i--)
                {
                    bits[i] = crc[j * 8 + i];   
                }
                Console.WriteLine("Передоваемый по порядку байт для подсчета crc");
                for (int i = 7; i >= 0; i--)
                {
                    Console.Write(bits[i]);
                }
                shiftCHECK(bits, crccheck, crc32bits);

            }
            Console.WriteLine();
            Console.WriteLine("Полученный остаток");
            for (int i = 31; i >= 0; i--)
            {
                
                crccheck[i] = crccheck[i] == 1 ? 0 : 1;//ТУТ МЕНЯТЬ ИНВЕРСИЮ ВО ВТОРОЙ РАЗ
                Console.Write(crccheck[i]);

            }
            Console.WriteLine();
            Console.ReadKey();

         }

        public static void shiftCHECK(int[] bits, int[] crc, int[] crc32bits)
        {
            //Console.WriteLine("Дописываем в crc новый байт:\n");
            for (int i = 7; i >= 0; i--)
            {
                for (int k = 38; k >= 0; k--)
                {
                    crc[k + 1] = crc[k];
                }
                crc[0] = bits[i];
            }
            ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            //for (int i = 39; i >= 0; i--)
            //{
            //    Console.Write(crc[i]);
            //}
            ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            Console.WriteLine("\n");
            for (int i = 39; i > 31; i--)
            {
                ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                    //Console.WriteLine("\nВыходящий бит [" + i+ "] = "+ crc[i]);
                ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                if (crc[i] == 1)
                    for (int j = 0; j < 40; j++)
                    {
                        crc[j] = crc32bits[j] ^ crc[j];
                    }

                ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                //Console.WriteLine("\n\nИзмененное crc\n");
                //for (int k = 39;k>= 0; k--)
                //{
                //    Console.Write(crc[k]);
                //}
                ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                for (int k = 0; k < 39; k++)
                {
                    crc32bits[k] = crc32bits[k + 1];
                }
                crc32bits[39] = 0;
                ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
                //Console.WriteLine("\n\nИзмененный полином\n");
                //for (int k = 39; k >= 0; k--)
                //{
                //    Console.Write(crc32bits[k]);
                //}
                ////////////////////////////////////////////////////////////////////////////ВЫВОД////////////////////////////////////////////////////////////////////////////
            }
            for (int h = 0; h < 8; h++)
            {
                for (int k = 38; k >= 0; k--)
                {
                    crc32bits[k + 1] = crc32bits[k];
                }
                crc32bits[0] = 0;
            }
            crc32bits[7] = 1;
            //Console.WriteLine("\nПолином после отработки функции, возврат в нач. значение\n");
            //for (int k = 39; k >= 0; k--)
            //{
            //    Console.Write(crc32bits[k]);
            //}
            //Console.WriteLine("\n");
        }
    }
}
